# Generated by Django 4.2.1 on 2023-06-06 15:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('comments', models.ManyToManyField(blank=True, to='post.comment')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_disliked', models.ManyToManyField(blank=True, related_name='comment_disliked', to=settings.AUTH_USER_MODEL)),
                ('users_liked', models.ManyToManyField(blank=True, related_name='comment_liked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('comments', models.ManyToManyField(blank=True, to='post.comment')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users_disliked', models.ManyToManyField(blank=True, related_name='users_disliked', to=settings.AUTH_USER_MODEL)),
                ('users_liked', models.ManyToManyField(blank=True, related_name='users_liked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
